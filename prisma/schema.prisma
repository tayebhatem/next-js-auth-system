// prisma/schema.prisma
datasource db {
  provider  = "postgresql"
  url  	    = env("DATABASE_URL")
  // uncomment next line if you use Prisma <5.10
   directUrl = env("DATABASE_URL_UNPOOLED")
}

generator client{
  provider= "prisma-client-js"
}
enum userRole{
ADMIN
USER
}
model User {
  id            String          @id @default(cuid())
  name          String?
  email         String          @unique
  password      String?
  role          userRole        @default(USER)
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  isTwoFactorEnabled Boolean @default(false)
  twoFactorConfirmation TwoFactorConfirmation?
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@id([provider, providerAccountId])
}

model VerificationToken{
  id        String    @id @default(cuid())
  email     String
  token     String    @unique
  expires   DateTime

  @@unique([email,token])
}

model ForgetPaasswordToken{
  id        String    @id @default(cuid())
  email     String
  token     String    @unique
  expires   DateTime

  @@unique([email,token])
}

model TwoFactorToken{
  id        String    @id @default(cuid())
  email     String
  token     String    @unique
  expires   DateTime

  @@unique([email,token])
}
model TwoFactorConfirmation{
  id String  @id @default(cuid())
  userId String 
  user User @relation(fields: [userId],references: [id],onDelete: Cascade)
  @@unique([userId])
}
